@model AlgoOpp.Models.INTERVIEW_STATUS_CY

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/Layout_Company.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>INTERVIEW_STATUS_CY</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.INTERVIEW_ID)

    <div class="form-group">
        @Html.LabelFor(model => model.STUD_ID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.STUD_ID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.STUD_ID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.STUD_NAME, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.STUD_NAME, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.STUD_NAME, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EMAIL_ID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EMAIL_ID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EMAIL_ID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MOBILE, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MOBILE, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MOBILE, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DEPARTMENT, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DEPARTMENT, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DEPARTMENT, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.YEAR, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.YEAR, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.YEAR, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CGPA, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CGPA, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CGPA, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.APTITUDE_ROUND, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.APTITUDE_ROUND, new List<SelectListItem>
                    {
                        new SelectListItem {Text = "Select", Value = "", Selected = true},
                        new SelectListItem {Text = "Selected", Value = "Selected" },
                        new SelectListItem {Text = "Rejected", Value = "Rejected" },
                        new SelectListItem {Text = "Pending", Value = "Pending" },
                    }, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.APTITUDE_ROUND, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TECHNICAL_ROUND, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.TECHNICAL_ROUND, new List<SelectListItem>
                    {
                        new SelectListItem {Text = "Select", Value = "", Selected = true},
                        new SelectListItem {Text = "Selected", Value = "Selected" },
                        new SelectListItem {Text = "Rejected", Value = "Rejected" },
                        new SelectListItem {Text = "Pending", Value = "Pending" },
                    }, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.TECHNICAL_ROUND, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.HR_ROUND, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.HR_ROUND, new List<SelectListItem>
                    {
                        new SelectListItem {Text = "Select", Value = "", Selected = true},
                        new SelectListItem {Text = "Selected", Value = "Selected" },
                        new SelectListItem {Text = "Rejected", Value = "Rejected" },
                        new SelectListItem {Text = "Pending", Value = "Pending" },
                    }, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.HR_ROUND, "", new { @class = "text-danger" })
        </div>
    </div>
    @*<div class="form-group">
            @Html.LabelFor(model => model.APTITUDE_ROUND, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="number">
                    <option value="">Select</option>
                    <option value="1">Selected</option>
                    <option value="2">Rejected</option>
                    <option value="3">Pending</option>
                </select>
                @Html.EditorFor(model => model.APTITUDE_ROUND, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.APTITUDE_ROUND, "", new { @class = "text-danger" })
            </div>
        </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.TECHNICAL_ROUND, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TECHNICAL_ROUND, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TECHNICAL_ROUND, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HR_ROUND, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HR_ROUND, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HR_ROUND, "", new { @class = "text-danger" })
            </div>
        </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.APP_STATUS, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.APP_STATUS, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.APP_STATUS, "", new { @class = "text-danger" })
            </div>
        </div>*@



    @*<div class="form-group">
            @Html.LabelFor(model => model.EST_ID_CY, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EST_ID_CY, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EST_ID_CY, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EST_ID_CL, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EST_ID_CL, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EST_ID_CL, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NOTIFY_ID_CL, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NOTIFY_ID_CL, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NOTIFY_ID_CL, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NOTIFY_ID_CY, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NOTIFY_ID_CY, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NOTIFY_ID_CY, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RECRUIT_ID_CY, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RECRUIT_ID_CY, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RECRUIT_ID_CY, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
